name: Release OpenFFBoard firmware

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      # Branch filtering is not possible when triggerd by tags!

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Build_firmware:
    uses: ./.github/workflows/build-firmware.yml

  Build_configurator:
    name: Build configurator
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'macos-latest']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'true'


      - name: Build configurator
        id: build_c
        uses: ./Configurator/.github/actions/build-pyinstaller
        with: 
          path: '${{ github.workspace }}/Configurator'
        
      - uses: actions/upload-artifact@v2
        with:
          name: OpenFFBoard-Configurator-${{ matrix.os }}
          path: ${{ steps.build_c.outputs.distpath }}



  Release:
    needs: [Build_firmware,Build_configurator] # Requires build first
    name: Create release
    runs-on: ubuntu-latest
    #if: github.event.base_ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'true'

      # Download artifacts for release
      - uses: actions/download-artifact@v3
        with:
          path: etc/usr/artifacts/

      # - name: Make temp dir
      #   run: mkdir -p etc/usr/fw # make temp directory

      # # Move hex files
      # - name: Move firmware files
      #   run: find etc/usr/artifacts/ -name '*.hex' -exec cp {} etc/usr/fw/ \;

      - name: Zip firmware
        run: zip -qq -r Firmware.zip OpenFFBoard-Firmware-*
        working-directory: etc/usr/artifacts/

      - name: Zip configurator
        run: |
          for i in OpenFFBoard-Configurator-*/; do zip -qq -r "${i%/}.zip" "$i"; done
        working-directory: etc/usr/artifacts/

      - name: Make changelog
        run: |
          echo -e "### Firmware changes\n" > /tmp/CHANGELOG.md
          cat ${{ github.workspace }}/CHANGELOG.md >> /tmp/CHANGELOG.md
          echo -e "\n### Configurator changes\n" >> /tmp/CHANGELOG.md
          cat ${{ github.workspace }}/Configurator/CHANGELOG.md >> /tmp/CHANGELOG.md


      # Create release
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: "OpenFFBoard ${{github.ref_name}}"
          body_path: /tmp/CHANGELOG.md
          files: etc/usr/artifacts/*.zip
          prerelease: ${{contains(github.ref_name, '-')}}